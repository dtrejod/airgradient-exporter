# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Print Github Build Environment
      run: echo "$GITHUB_VARS"
      shell: bash
      env:
        GITHUB_VARS: ${{ toJson(github) }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Verify dependencies
      run: go mod verify

    - name: Vet
      run: go vet $(go list ./... | grep -v /vendor/)

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck $(go list ./... | grep -v /vendor/)

    - name: Install golint
      run: go install golang.org/x/lint/golint@latest

    - name: Run golint
      run: golint $(go list ./... | grep -v /vendor/)

    - name: Compile
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v3

    - name: Print Github Build Environment
      run: echo "$GITHUB_VARS"
      shell: bash
      env:
        GITHUB_VARS: ${{ toJson(github) }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Build binary
      run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -ldflags="-X github.com/${{ github.repository }}/version.version=${{ github.ref_name }}" -o ./${{ github.event.repository.name }}-${{ matrix.goarch }}-${{ matrix.goos }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./${{ github.event.repository.name }}-${{ matrix.goarch }}-${{ matrix.goos }}

  docker-release:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      packages: write
    strategy:
      # The matrix here should be a subset of the matrix in the release job
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Binaries
      uses: actions/download-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.goarch }}-${{ matrix.goos }}

    - name: Build and Push Docker Image for Multiple Platforms
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,darwin/amd64,darwin/arm64
        push: true
        build-args: |
          BINARY_NAME=${{ github.event.repository.name }}
          GOOS=${{ matrix.goos }}
          GOARCH=${{ matrix.goarch }}
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.ref_name }}
